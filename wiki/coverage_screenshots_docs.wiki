#summary UNDER CONSTRUCTION: Documentation for coverage_screenshots.py

<wiki:toc max_depth="2" />

= Introduction  & Description =

*coverage_screenshots.py* produces coverage plots for one or more bam files at
the intervals specified in a bed file. Plots are written in pdf format, one per
region or can be concatenated in a single file.

Plots can be annotated according to a GTF file and decorated with the individual
nucleotides if a corresponding reference FASTA file is provided.

In contrast to most genome browsers (IGV. IGB etc.) `coverage_screenshots.py`
is deliberately designed to be devoid of any graphical user interface so that it can be
included in script and pipelines and can be run on enviroments not designed to
support GUIs (e.g. computer farms).

The heavy duty task of counting nucleotides at each position is performed by `samtools mpileup`
via `pysam` so it is reasonably fast. Interval operations are executed by `pybedtools`. Plotting
is done by R.

= Required input =

The necessary input files are:

    *  *BAM* files *sorted* and *indexed*

    * A *BED* file of regions to compute and plot coverage for.
        Bed file should be tab separated and have at least three columns for chrom,
        start and end position. An addtional column with the feature name might be included and will be
        part of the output file names. Addtional columns are ignored.

    * _Optional_ GTF or BED file with annotation to be displayed. Such files can be obtained
        from UCSC, ENSEMBL or custom made. Make sure chromosome names are consistent across
        files!

    * _Optional_ Fasta file of the refernence sequence used to produce the alignments. Only needed to display the sequence of the interval.
 
_MEMO_ You can sort and index a bam file, assuming you have samtools (http://samtools.sourceforge.net/), with

{{{
    samtools sort myfile.bam myfile_sort
    samtools index myfile_sort.bam
}}}  

= Description of output =

Intermediate output files, including the R script used to generate the plots,
can be saved for future inspection. The following files are generated for *each*
bed interval:


    * `*.mpileup.bed.txt`
            Coverage and nucleotide counts (or rpm) at each postion in the interval
    * `*.grp.bed.txt`
            Coverage and nucleotide counts (or rpm) averaged by equally sized windows
    * `*.seq.txt`
            Base at each position in the interval (if a fasta file is provided (`--fasta`) and
            the region size does not exceed the requested limit (`--max_fa` option) )
    * `*.annot.txt`
            Annotation file with GTF features intersected by this bed interval.
    * `*.R`
            R script to produce the PDF files.
    * `*.pdf`
            PDF file of the plots

files are named according to the bed interval from which they come (`chrom_start_end[_name]` e.g. _chr7_5566644_5570292_ACTB.pdf_).

For example, the following execution
{{{
    coverage_screenshots.py --ibam *.bam --gtf genes.gtf.gz --bed actb.bed --rpm 
}}}

will plot the coverage of all the bam files in the current directory at the
postions specified in the bed file `actb.bed`. It will also add the postions of
exons and CDSs as reported in `genes.gtf.gz`. with `--rpm` coverage is reported as
_reads per million_.

----

http://bioinformatics-misc.googlecode.com/svn/wiki/images/chr7_5566757_5566829_ACTB.jpg

Example output from `coverage_screenshots.py` of RNA-Seq data for the ACTB gene (actual output is PDF).
----

= Requirements =

All the componets that make `coverage_screenshots.py` are freely available from
the net.

    * python 2.7
        2.6 should do, 3.x not sure
    * R
        Actually `Rscript` to be found on your `$PATH`
    * Linux/Unix
        Windows might not be supported due to `pysam` incompatibility.

== Required python packages ==

    * argparse
        Included in python 2.7 standard library
    * pysam
        See http://code.google.com/p/pysam/
    * pybedtools
        See http://pythonhosted.org/pybedtools/index.html
    * PyPDF2
        _Optional_: Only used to concatenate all PDF files in a single one (`--onefile`).
        See https://pypi.python.org/pypi/PyPDF2

= Installation =

Assuming the requirements above are satisfied there isn't really any installation to be done.
Just download, unzip, and copy `coverage_screenshots.py` to a directory of your covenience
{{{
    tar zxvf coverage_screenshots-x.x.x.tar.gz
    cd coverage_screenshots-x.x.x
    cp  coverage_screenshots.py ~/bin/
}}}

= Usage & Examples =

The source directory contains data files for testing and examples
{{{
        cd example
        cat actb.bed
            chr7	5566757	5566829	ACTB
            chr7	5566755	5567571	ACTB
            chr7	5566644	5570292	ACTB
}}}
To see all the available options and get help
{{{    
    coverage_screenshots.py -h
}}}

== Example 1: Vanilla ==

The minimum necessary to produce coverage plots is bam files *sorted* and *indexed* and
a bed file of positions to capture. (In fact, bam files are not necessary if you want to re-plot
existing data, see below)
{{{
    coverage_screenshots.py -i bam/ds0*.bam -b actb.bed
}}}
Default settings plot raw read counts scaling each region to the maximum of all the
files.

== Example 2: Adding annotation ==

Now, rescale coverage to reads per million (RPM) and set the y-axis to 40000 rpm. Also add annotation
of exons and CDSs in the target intervals and report the underlying nucleotide sequence. Sequence is
reported if the target region is smaller than `--max_fa` bp. Finally, concatenate the files in a single pdf (requires `PyPDF2 <https://pypi.python.org/pypi/PyPDF2/>`_ package)
{{{
    coverage_screenshots.py -i bam/ds0*.bam \
        -b actb.bed \
        -g genes.gtf \
        -f chr7.fa \
        --onefile actb_pdf/actb.pdf \
        --rpm \
        --ylim 40000 \
        --tmpdir wdir
}}}
Intermediate files have been saved for future use under directory `wdir`.

== Example 3: Re-plotting ==

Since computing coverage can be expensive, we don't need to do it again if all we
want is to change the graphical output. If we saved the intermediate output files
from a previous run by seeting `--tmpdir`, we can re-use them with option `--replot`
and change the graphical settings to our liking.
{{{
    coverage_screenshots.py -b actb.bed --tmpdir wdir --rpm \
        --col_cov pink \
        --pwidth 12 \
        --psize 12 \
        --cex_seq 0.6 \
        --col_seq darkred \
        --onefile actb_pdf/actb-2.pdf \
        --replot
}}}

Note that it is no longer necessary to give the bam, gtf, and fasta files. All we need
to `replot` is the original bed file, possibly with some rows removed if
we don't want them anymore, and the working directory where the previously
generated files are  (`--tmpdir`).

----
http://bioinformatics-misc.googlecode.com/svn/wiki/images/chr7_5566644_5570292_ACTB.jpg

   Example output from `coverage_screenshots.py` with annotation and colour code nucleotide
   counts.
----